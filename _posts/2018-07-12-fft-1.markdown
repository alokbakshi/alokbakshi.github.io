---
layout: post
title:  Fast Fourier Transformation - 1
date:   2018-07-12 
permalink: /fft-1
author: "Alok Bakshi"
---

## Introduction

Let us first define the *Discrete Fourier Transformation* (abbreviated as DFT) and fix the notation for subsequent discussion.

### Discrete Fourier Transformation

Given a sequence of \\( N \\) complex numbers, namely $$ X_N = (x_n)_{n=0}^{N-1} $$ its discrete Fourier transformation $$ Y_N = (y_m)_{m=0}^{N-1} $$ is defined by the following rule

$$
\displaystyle y_m = \sum_{n=0}^{N - 1} x_n \ \exp\left(\frac{2 \pi i}{N} \, m n\right) \ \ \ \forall \ 0 \leq m \leq N - 1
$$

Moreover the inverse of above map (called inverse discrete Fourier transform) is defined as

$$
\displaystyle x_n = \frac{1}{N} \sum_{m=0}^{N - 1} y_m \ \exp\left(- \frac{2 \pi i}{N} \, m n \right) \ \ \ \forall \ 0 \leq n \leq N - 1
$$


Let $$ \mathbb{F}_N $$ denote the $$ N \times N $$ matrix whose $$ (m, n) $$ entry is given by $$
\displaystyle \left( \mathbb{F}_N \right)_{(m, n)} = \exp\left(\frac{2 \pi i}{N} \, m n \right)$$ then the above rule can be succintly expressed as the following matrix vector multiplication

$$
\displaystyle Y_N = \mathbb{F}_N \, X_N
$$

### Fast Fourier Transformation

Looking at the equation above one can see that straightforward calculation will require $$O(N^2)$$ computations to calculate $$ Y_N $$.  *Fast Fourier Transformation* (abbreviated as FFT) is an $$ O(N \log(N)) $$ algorithm to compute the same.

From now (without loss of generality) we will make an assumption that $$ N $$ is a power of two. If that is not the case one can simply pad the input vector $$ X_N $$ with required number of zeros at the end. Doing that will at most double the input size so the complexity of FFT algorithm won't change.

Even though  the matrix $$ \mathbb{F}_N $$ is far from being sparse, yet we can exploit the special structure it possesses. Namely, 

$$
\displaystyle \mathbb{F}_N = \begin{pmatrix}\mathbb{I}_{\frac{N}{2}} &  \mathbb{D}_{\frac{N}{2}} \\ \mathbb{I}_{\frac{N}{2}} & - \mathbb{D}_{\frac{N}{2}} \end{pmatrix} \begin{pmatrix} \mathbb{F}_{\frac{N}{2}} & 0 \\ 0 & \mathbb{F}_{\frac{N}{2}} \end{pmatrix} \mathbb{S}_N 
$$

Here $$ \mathbb{D}_N $$ is a diagonal matrix defined as

$$ \mathbb{D}_N = \begin{pmatrix}
    
    1 & & & & \\
    & \omega_N & & & \\
    & & \omega_N & & \\
    & & & \ddots &  \\
    & & & & \omega_N^{N - 1}

\end{pmatrix}  $$ 

where $$ \omega_N $$ is primitive $$ N^{\mbox{th}} $$ root of unity, i.e. $$ \omega_N = \exp\left(\frac{2 \pi i}{N}\right) $$. Moreover the permutation matrix $$ \mathbb{S}_N $$ shuffles even indices before the odd ones. For example

$$
\mathbb{S}_4 = \begin{pmatrix} 1 & 0 & 0 & 0 \\ 0 & 0 & 1 & 0 \\ 0 & 1 & 0 & 0 \\ 0 & 0 & 0 & 1 \end{pmatrix} \ \ \mbox{ and in general } \ \ \mathbb{S}_N = \begin{pmatrix} \mathbf{e}_0 \\ \mathbf{e}_2 \\ \ldots \\ \mathbf{e}_{N} \\ \mathbf{e}_1 \\ \mathbf{e}_3 \\ \ldots \\ \mathbf{e}_{N - 1} \end{pmatrix}
$$

Moreover the inverse fourier transform can be obtained by recognizing that $$ \frac{1}{\sqrt{N}} \mathbb{F}_N $$ is a unitary and symmetric matrix, in other words

$$
\mathbb{F}^{-1}_N = \frac{1}{N} \ \overline{\mathbb{F}_N} 
$$

where $$ \overline{\mathbb{F}_N} $$ is complex conjugate of the matrix $$ \mathbb{F}_N $$. 

### An Illustrative Example

Let us take consider the case when $$ N = 4 $$ with $$ X_4 = (x_0, x_1, x_2, x_3) $$. 

We shall calculate its discrete Fourier trasnform (and inverse discrete Fourier transform) by direct calculation as well as by using the FFT described above.

#### DFT Calculation

Fourier transformation $$ Y_4 = \mathbb{F}_4 \ X_4 = (y_0, y_1, y_2, y_3) $$ by definition is given by

$$
\begin{align*}
y_0 &= \sum_{n = 0}^3 x_n \ \exp\left( \frac{2 \pi i}{4} 0 \cdot n \right) = x_0 + x_1 + x_2 + x_3 \\
y_1 &= \sum_{n = 0}^3 x_n \ \exp\left( \frac{2 \pi i}{4} 1 \cdot n \right) = x_0 + i x_1 - x_2 - i x_3 \\
y_2 &= \sum_{n = 0}^3 x_n \ \exp\left( \frac{2 \pi i}{4} 2 \cdot n \right) = x_0 - x_1 + x_2 - x_3 \\
y_3 &= \sum_{n = 0}^3 x_n \ \exp\left( \frac{2 \pi i}{4} 3 \cdot n \right) = x_0 - i x_1 -  x_2 + i x_3 
\end{align*}
$$

Moreover the inverse discrete Fourier transform is given as

$$
\begin{align*}
x_0 &= \frac{1}{4} \sum_{m = 0}^3 y_m \ \exp\left( - \frac{2 \pi i}{4} 0 \cdot m \right) = \frac{1}{4}\left( y_0 + y_1 + y_2 + y_3 \right) \\
x_1 &= \frac{1}{4} \sum_{m = 0}^3 y_m \ \exp\left( - \frac{2 \pi i}{4} 1 \cdot m \right) = \frac{1}{4} \left( y_0 - i y_1 - y_2 + i y_3 \right) \\
x_2 &= \frac{1}{4}\sum_{m = 0}^3 y_m \ \exp\left( - \frac{2 \pi i}{4} 2 \cdot m \right) = \frac{1}{4} \left( y_0 - y_1 + y_2 - y_3 \right) \\
x_3 &= \frac{1}{4} \sum_{m = 0}^3 y_m \ \exp\left( - \frac{2 \pi i}{4} 3 \cdot m \right) = \frac{1}{4} \left( y_0 + i y_1 - y_2 - i y_3 \right)
\end{align*}
$$

#### FFT Calculation

For the sake of clarity, let us first see what $$ \mathbb{F}_1 $$ and $$ \mathbb{F}_2 $$ matrices look like. For the boundary case of $$ N = 1 $$, by definition one has $$ \mathbb{F}_1 = 1 $$. 

On the other hand for $$ N = 2 $$ by definition we have

$$
\mathbb{F}_2 = \begin{pmatrix}\mathbb{I}_{1} &  \mathbb{D}_{1} \\ \mathbb{I}_{1} & - \mathbb{D}_{1} \end{pmatrix} \begin{pmatrix} \mathbb{F}_{1} & 0 \\ 0 & \mathbb{F}_{1} \end{pmatrix} \mathbb{S}_2
= \begin{pmatrix} 1 & 1 \\ 1 & - 1 \end{pmatrix} \begin{pmatrix} 1 & 0 \\ 0 & 1 \end{pmatrix} \begin{pmatrix} 1 & 0 \\ 0 & 1 \end{pmatrix}
$$

Thus for the record, given an input $$ (a, b) $$ the output would be
$$
\mathbb{F}_2 \begin{pmatrix} a \\ b \end{pmatrix} = \begin{pmatrix} a + b \\ a - b \end{pmatrix}
$$

Getting back to the problem, we have

$$
\begin{align*}
\begin{pmatrix} y_0 \\ y_1 \\ y_2 \\ y_3 \end{pmatrix} &= \mathbb{F}_4 \begin{pmatrix} x_0 \\ x_1 \\ x_2 \\ x_3 \end{pmatrix} = \begin{pmatrix}\mathbb{I}_{2} &  \mathbb{D}_{2} \\ \mathbb{I}_{2} & - \mathbb{D}_{2} \end{pmatrix} \begin{pmatrix} \mathbb{F}_{2} & 0 \\ 0 & \mathbb{F}_{2} \end{pmatrix} \mathbb{S}_4 \begin{pmatrix} x_0 \\ x_1 \\ x_2 \\ x_3 \end{pmatrix} = \begin{pmatrix}\mathbb{I}_{2} &  \mathbb{D}_{2} \\ \mathbb{I}_{2} & - \mathbb{D}_{2} \end{pmatrix} \begin{pmatrix} \mathbb{F}_{2} & 0 \\ 0 & \mathbb{F}_{2} \end{pmatrix} \begin{pmatrix} x_0 \\ x_2 \\ x_1 \\ x_3 \end{pmatrix} \\
&= \begin{pmatrix} \mathbb{I}_{2} & \mathbb{D}_{2} \\ \mathbb{I}_{2} & - \mathbb{D}_{2} \end{pmatrix} \begin{pmatrix} \mathbb{F}_2 \begin{pmatrix} x_0 \\ x_2 \end{pmatrix} \\ \mathbb{F}_2 \begin{pmatrix} x_1 \\ x_3 \end{pmatrix} \end{pmatrix} = \begin{pmatrix} 1 & 0 & 1 & 0 \\ 0 & 1 & 0 & i \\ 1 & 0 & -1 & 0 \\ 0 & 1 & 0 & -i \end{pmatrix} \begin{pmatrix} x_0 + x_2 \\ x_0 - x_2 \\ x_1 + x_3 \\ x_1 - x_3 \end{pmatrix} = \begin{pmatrix} x_0 + x_1 + x_2 + x_3 \\ x_0 + i x_1 - x_2 - i x_3 \\ x_0 - x_1 + x_2 - x_3 \\ x_0 - i x_1 -  x_2 + i x_3  
\end{pmatrix}
\end{align*}
$$

For the case of inverse transform similarly we have

$$
\begin{pmatrix} x_0 \\ x_1 \\ x_2 \\ x_3 \end{pmatrix} = \mathbb{F}^{-1}_4 \begin{pmatrix} y_0 \\ y_1 \\ y_2 \\ y_3 \end{pmatrix} = \frac{1}{4} \, \overline{\mathbb{F}_4} \begin{pmatrix} y_0 \\ y_1 \\ y_2 \\ y_3 \end{pmatrix} = \frac{1}{4} \begin{pmatrix} 1 & 0 & 1 & 0 \\ 0 & 1 & 0 & - i \\ 1 & 0 & -1 & 0 \\ 0 & 1 & 0 & i \end{pmatrix} \begin{pmatrix} y_0 + y_2 \\ y_0 - y_2 \\ y_1 + y_3 \\ y_1 - y_3 \end{pmatrix} = \frac{1}{4} \begin{pmatrix} y_0 + y_1 + y_2 + y_3 \\ y_0 - i y_1 - y_2 + i y_3 \\ y_0 - y_1 + y_2 - y_3 \\ y_0 + i y_1 - y_2 - i y_3 \end{pmatrix}
$$


