---
layout: post
title:  Linear Programming - 1
date:   2018-07-12 
permalink: /lp-1
author: "Alok Bakshi"
---



One of the simplest class of Mathematical optimization problems is *Linear Programs* (henceforth abbreviated as LP ) which find many [applications](https://en.wikipedia.org/wiki/Linear_programming#Uses) in modeling real world problems. In this post and the future ones, we will look at the naive procedure of solving a LP problem (A custom implementation of it is made [here](https://github.com/alokbakshi/Linear-Program-Solver)).


## Mathematical Formulation 

A Linear Program (LP) in standard form can be written as following:

$$

\begin{align*}

\mbox{Maximize  } z = \sum_{i=1}^n c_i x_i \\

\mbox{subjected to the following constraints:} \\

\sum_{i = 1}^n a_{i j} x_i = b_j \ \ \ \forall 1 \leq j \leq m \\

x_i \geq 0 \ \ \ \forall 1 \leq i \leq n

\end{align*}

$$

In the above formulation, there are $$ n $$ variables and $$ m $$ constraints. We will declare $$ \mathbf{x} = \left(x_i\right)_{i=1}^n $$ to be a solution of above if it satisfies all of the above $$ m $$ constraints. An solution $$ \widetilde{\mathbf{x}} = \left(\widetilde{x_i}\right)_{i=1}^n $$ is called an optimal solution if for any other solution  $$ \mathbf{x}' = \left( x'_i \right)_{i=1}^n $$ we have

$$
\widetilde{z} = \sum_{i=1}^n c_i \widetilde{x_i} \  \geq \ z' = \sum_{i=1}^n c_i x'_i
$$

In case the optimal soliution exists we refer to $$ \widetilde{z} $$ as the optimal value. 

### Possible Scenarios

Given a LP problem in standard form, we could face the following

* LP has no solution. An example of it will be when the constraints contradict each other. For concreteness, the LP written below has no solution.

$$
\begin{align*}
\mbox{Maximize  } z &= x_1 + x_2 \\
x_1 + x_2 &\leq 2 \\
-x_1 - x_2 &\leq -4 \\
x_1 \geq 0&, \ x_2 \geq 0 \\
\end{align*}
$$

* Optimal value of the LP problem is infinite. For example, a LP problem written below has unbounded solution space and $$ z $$ can be made arbitrarily large 

$$
\begin{align*}
\mbox{Maximize  } z = 4 x_1 \\
- x_1 \leq - 2 \\
x_1 \geq 0
\end{align*}
$$


For clarity, we first make sure that none of the above two conditions arise. This can be ensured by making the following assumptions:

* $$ b_j \geq 0 $$ for all $$ j \in \left\{ 1, 2, \ldots, m\right\} $$
* Solution space of LP formulation above is bounded from above.

Under these assumptions, there is a unique optimal value (and potentially several optimal solutions) of the above problem. [Simplex method](https://en.wikipedia.org/wiki/Simplex_algorithm) -- and variants thereof -- is one of the most popular algorithm to solve the above problem.

Intuitively speaking, we first choose `n-m` variables and assign them the zero value (called non basic variables). Thereafter the remaining `m` variables (called basic variables) can be computed by solving the $$ m \times m $$ system of equations.

Thus we have two separate sets of basic and non basic variables. Now one checks that if one can improve the solution by making a single exchange between the set of "non basic variables" and "basic variables." If it is not possible then we have arrived at the optimal solution otherwise one simply repeats the above procedure.

Theoretically speaking, in worst case scenario one need to make $$ \binom{n}{m} $$ many iterations but in practice the above algorithm runs much faster and performs even better than provably efficient (polynomial time) [algorithms](https://en.wikipedia.org/wiki/Karmarkar%27s_algorithm).

We will now work out a concrete example explaining the logic behind the Simplex Tableaux algorithm.